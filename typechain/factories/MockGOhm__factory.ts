/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockGOhm, MockGOhmInterface } from "../MockGOhm";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initIndex",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceFrom",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "balanceTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sOhm",
        type: "address",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620012423803806200124283398101604081905262000035916200021a565b6040518060400160405280600e81526020016d476f7665726e616e6365204f484d60901b81525060405180604001604052806004815260200163674f484d60e01b815250601282828282600090805190602001906200009692919062000174565b508151620000ac90600190602085019062000174565b5060ff81166080524660a052620000c2620000d8565b60c05250505060e0939093525062000315915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200010c919062000271565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001829062000234565b90600052602060002090601f016020900481019282620001a65760008555620001f1565b82601f10620001c157805160ff1916838001178555620001f1565b82800160010185558215620001f1579182015b82811115620001f1578251825591602001919060010190620001d4565b50620001ff92915062000203565b5090565b5b80821115620001ff576000815560010162000204565b6000602082840312156200022d57600080fd5b5051919050565b600181811c908216806200024957607f821691505b602082108114156200026b57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200028e57607f831692505b6020808410821415620002af57634e487b7160e01b86526022600452602486fd5b818015620002c65760018114620002d85762000307565b60ff1986168952848901965062000307565b60008a81526020902060005b86811015620002ff5781548b820152908501908301620002e4565b505084890196505b509498975050505050505050565b60805160a05160c05160e051610ed76200036b600039600081816101da0152818161059f01526106460152600061056f0152600061053a015260008181610228015281816105c3015261061b0152610ed76000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806340c10f19116100cd5780639dc29fac11610081578063a9059cbb11610066578063a9059cbb146102f8578063d505accf1461030b578063dd62ed3e1461031e57600080fd5b80639dc29fac146102d2578063a8248768146102e557600080fd5b806370a08231116100b257806370a082311461028a5780637ecebe00146102aa57806395d89b41146102ca57600080fd5b806340c10f191461026457806366a5236c1461027757600080fd5b806323b872dd1161012457806330adf81f1161010957806330adf81f146101fc578063313ce567146102235780633644e5151461025c57600080fd5b806323b872dd146101c25780632986c0e5146101d557600080fd5b806306fdde0314610156578063095ea7b3146101745780631068361f1461019757806318160ddd146101ab575b600080fd5b61015e610349565b60405161016b9190610ac2565b60405180910390f35b610187610182366004610b33565b6103d7565b604051901515815260200161016b565b6101a96101a5366004610b5d565b5050565b005b6101b460025481565b60405190815260200161016b565b6101876101d0366004610b90565b610444565b6101b47f000000000000000000000000000000000000000000000000000000000000000081565b6101b47f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61024a7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff909116815260200161016b565b6101b4610536565b6101a9610272366004610b33565b610591565b6101b4610285366004610bcc565b61059b565b6101b4610298366004610be5565b60036020526000908152604090205481565b6101b46102b8366004610be5565b60056020526000908152604090205481565b61015e6105fd565b6101a96102e0366004610b33565b61060a565b6101b46102f3366004610bcc565b610614565b610187610306366004610b33565b61066b565b6101a9610319366004610c07565b6106e3565b6101b461032c366004610b5d565b600460209081526000928352604080842090915290825290205481565b6000805461035690610c7a565b80601f016020809104026020016040519081016040528092919081815260200182805461038290610c7a565b80156103cf5780601f106103a4576101008083540402835291602001916103cf565b820191906000526020600020905b8154815290600101906020018083116103b257829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104329086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146104a05761047b8382610ccb565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906104c8908490610ccb565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105239087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461056c57610567610948565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6101a582826109e2565b60007f00000000000000000000000000000000000000000000000000000000000000006105e97f0000000000000000000000000000000000000000000000000000000000000000600a610dc6565b6105f39084610dd5565b61043e9190610df4565b6001805461035690610c7a565b6101a58282610a4e565b60006106417f0000000000000000000000000000000000000000000000000000000000000000600a610dc6565b6105f37f000000000000000000000000000000000000000000000000000000000000000084610dd5565b3360009081526003602052604081208054839190839061068c908490610ccb565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104329086815260200190565b428410156107385760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000610742610536565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561085b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906108915750886001600160a01b0316816001600160a01b0316145b6108dd5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f5349474e4552000000000000000000000000000000000000604482015260640161072f565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161097a9190610e16565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546109f49190610eb2565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6001600160a01b03821660009081526003602052604081208054839290610a76908490610ccb565b90915550506002805482900390556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a42565b600060208083528351808285015260005b81811015610aef57858101830151858201604001528201610ad3565b81811115610b01576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b2e57600080fd5b919050565b60008060408385031215610b4657600080fd5b610b4f83610b17565b946020939093013593505050565b60008060408385031215610b7057600080fd5b610b7983610b17565b9150610b8760208401610b17565b90509250929050565b600080600060608486031215610ba557600080fd5b610bae84610b17565b9250610bbc60208501610b17565b9150604084013590509250925092565b600060208284031215610bde57600080fd5b5035919050565b600060208284031215610bf757600080fd5b610c0082610b17565b9392505050565b600080600080600080600060e0888a031215610c2257600080fd5b610c2b88610b17565b9650610c3960208901610b17565b95506040880135945060608801359350608088013560ff81168114610c5d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600181811c90821680610c8e57607f821691505b60208210811415610caf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610cdd57610cdd610cb5565b500390565b600181815b80851115610d1d578160001904821115610d0357610d03610cb5565b80851615610d1057918102915b93841c9390800290610ce7565b509250929050565b600082610d345750600161043e565b81610d415750600061043e565b8160018114610d575760028114610d6157610d7d565b600191505061043e565b60ff841115610d7257610d72610cb5565b50506001821b61043e565b5060208310610133831016604e8410600b8410161715610da0575081810a61043e565b610daa8383610ce2565b8060001904821115610dbe57610dbe610cb5565b029392505050565b6000610c0060ff841683610d25565b6000816000190483118215151615610def57610def610cb5565b500290565b600082610e1157634e487b7160e01b600052601260045260246000fd5b500490565b600080835481600182811c915080831680610e3257607f831692505b6020808410821415610e5257634e487b7160e01b86526022600452602486fd5b818015610e665760018114610e7757610ea4565b60ff19861689528489019650610ea4565b60008a81526020902060005b86811015610e9c5781548b820152908501908301610e83565b505084890196505b509498975050505050505050565b60008219821115610ec557610ec5610cb5565b50019056fea164736f6c634300080a000a";

export class MockGOhm__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockGOhm> {
    return super.deploy(_initIndex, overrides || {}) as Promise<MockGOhm>;
  }
  getDeployTransaction(
    _initIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_initIndex, overrides || {});
  }
  attach(address: string): MockGOhm {
    return super.attach(address) as MockGOhm;
  }
  connect(signer: Signer): MockGOhm__factory {
    return super.connect(signer) as MockGOhm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockGOhmInterface {
    return new utils.Interface(_abi) as MockGOhmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockGOhm {
    return new Contract(address, _abi, signerOrProvider) as MockGOhm;
  }
}
