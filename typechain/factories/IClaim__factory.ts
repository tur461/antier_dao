/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IClaim, IClaimInterface } from "../IClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "terms",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "percent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "wClaimed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "max",
            type: "uint256",
          },
        ],
        internalType: "struct IClaim.Term",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IClaim__factory {
  static readonly abi = _abi;
  static createInterface(): IClaimInterface {
    return new utils.Interface(_abi) as IClaimInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IClaim {
    return new Contract(address, _abi, signerOrProvider) as IClaim;
  }
}
