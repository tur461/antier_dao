/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockSOHM, MockSOHMInterface } from "../MockSOHM";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialIndex_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rebasePct_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_agnosticBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_allowedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_rebasePct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_totalAgnosticSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newIndex_",
        type: "uint256",
      },
    ],
    name: "setIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRebasePct_",
        type: "uint256",
      },
    ],
    name: "setRebasePct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200115138038062001151833981016040819052620000349162000225565b60408051808201825260098152684d6f636b20734f484d60b81b602080830191825283518085019094526004845263734f484d60e01b90840152815191929162000081916003916200017f565b508051620000979060049060208401906200017f565b50505060008211620000fc5760405162461bcd60e51b8152602060048201526024808201527f696e697469616c20696e646578206d75737420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600081116200015f5760405162461bcd60e51b815260206004820152602860248201527f7265626173652070657263656e74616765206d75737420626520677265617465604482015267072207468616e20360c41b6064820152608401620000f3565b6200016d6009600a6200035f565b608052600591909155600655620003b4565b8280546200018d9062000377565b90600052602060002090601f016020900481019282620001b15760008555620001fc565b82601f10620001cc57805160ff1916838001178555620001fc565b82800160010185558215620001fc579182015b82811115620001fc578251825591602001919060010190620001df565b506200020a9291506200020e565b5090565b5b808211156200020a57600081556001016200020f565b600080604083850312156200023957600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002a15781600019048211156200028557620002856200024a565b808516156200029357918102915b93841c939080029062000265565b509250929050565b600082620002ba5750600162000359565b81620002c95750600062000359565b8160018114620002e25760028114620002ed576200030d565b600191505062000359565b60ff8411156200030157620003016200024a565b50506001821b62000359565b5060208310610133831016604e8410600b841016171562000332575081810a62000359565b6200033e838362000260565b80600019048211156200035557620003556200024a565b0290505b92915050565b60006200037060ff841683620002a9565b9392505050565b600181811c908216806200038c57607f821691505b60208210811415620003ae57634e487b7160e01b600052602260045260246000fd5b50919050565b608051610d5e620003f360003960008181610223015281816104a0015281816106a901528181610759015281816108cc01526109890152610d5e6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806339509351116100e357806395d89b411161008c578063a9059cbb11610066578063a9059cbb14610320578063af14052c14610333578063dd62ed3e1461033b57600080fd5b806395d89b41146102fd5780639f678cca14610305578063a457c2d71461030d57600080fd5b80634d78a728116100bd5780634d78a728146102c157806370a08231146102ca578063952169c0146102dd57600080fd5b8063395093511461028857806340a5737f1461029b57806340c10f19146102ae57600080fd5b806323b872dd11610145578063312ca1391161011f578063312ca13914610245578063313ce5671461024e57806335eb1f351461025d57600080fd5b806323b872dd146102035780632986c0e5146102165780632e0f26251461021e57600080fd5b806306fdde031161017657806306fdde03146101c3578063095ea7b3146101d857806318160ddd146101fb57600080fd5b806301861080146101925780630452107d146101ae575b600080fd5b61019b60055481565b6040519081526020015b60405180910390f35b6101c16101bc366004610b4b565b610374565b005b6101cb6103f4565b6040516101a59190610b64565b6101eb6101e6366004610bd5565b610486565b60405190151581526020016101a5565b61019b61049c565b6101eb610211366004610bff565b6104de565b60055461019b565b61019b7f000000000000000000000000000000000000000000000000000000000000000081565b61019b60065481565b604051600981526020016101a5565b61019b61026b366004610c3b565b600960209081526000928352604080842090915290825290205481565b6101eb610296366004610bd5565b610610565b6101c16102a9366004610b4b565b61064c565b61019b6102bc366004610bd5565b6106a1565b61019b60075481565b61019b6102d8366004610c6e565b610739565b61019b6102eb366004610c6e565b60086020526000908152604090205481565b6101cb610793565b6101c16107a2565b6101eb61031b366004610bd5565b6107b4565b6101eb61032e366004610bd5565b61085b565b6101c16108ca565b61019b610349366004610c3b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600081116103ef5760405162461bcd60e51b815260206004820152602860248201527f7265626173652070657263656e74616765206d7573742062652067726561746560448201527f72207468616e203000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600655565b60606003805461040390610c90565b80601f016020809104026020016040519081016040528092919081815260200182805461042f90610c90565b801561047c5780601f106104515761010080835404028352916020019161047c565b820191906000526020600020905b81548152906001019060200180831161045f57829003601f168201915b5050505050905090565b600061049333848461091d565b50600192915050565b60007f00000000000000000000000000000000000000000000000000000000000000006005546007546104cf9190610ce1565b6104d99190610d00565b905090565b60006001600160a01b03841661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103e6565b6001600160a01b0383166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e6565b6001600160a01b038085166000908152600960209081526040808320938716835292905290812080548492906105f5908490610d22565b90915550610606905084848461097e565b5060019392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610493918590610647908690610d39565b61091d565b6000811161069c5760405162461bcd60e51b815260206004820181905260248201527f6e657720696e646578206d7573742062652067726561746572207468616e203060448201526064016103e6565b600555565b6000806005547f0000000000000000000000000000000000000000000000000000000000000000846106d39190610ce1565b6106dd9190610d00565b6001600160a01b03851660009081526008602052604081208054929350839290919061070a908490610d39565b9091555061071a90508482610a6c565b806007600082825461072c9190610d39565b9091555090949350505050565b6005546001600160a01b03821660009081526008602052604081205490917f0000000000000000000000000000000000000000000000000000000000000000916107839190610ce1565b61078d9190610d00565b92915050565b60606004805461040390610c90565b6107b13364174876e8006106a1565b50565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561084e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103e6565b610606338585840361091d565b60006001600160a01b0383166108bf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103e6565b61049333848461097e565b7f00000000000000000000000000000000000000000000000000000000000000006006546005546108fb9190610ce1565b6109059190610d00565b600560008282546109169190610d39565b9091555050565b6001600160a01b0383811660008181526009602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546000906109ae7f000000000000000000000000000000000000000000000000000000000000000084610ce1565b6109b89190610d00565b6001600160a01b0385166000908152600860205260408120805492935083929091906109e5908490610d22565b90915550506001600160a01b03831660009081526008602052604081208054839290610a12908490610d39565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a5e91815260200190565b60405180910390a350505050565b6001600160a01b038216610ac25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103e6565b8060026000828254610ad49190610d39565b90915550506001600160a01b03821660009081526020819052604081208054839290610b01908490610d39565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600060208284031215610b5d57600080fd5b5035919050565b600060208083528351808285015260005b81811015610b9157858101830151858201604001528201610b75565b81811115610ba3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610bd057600080fd5b919050565b60008060408385031215610be857600080fd5b610bf183610bb9565b946020939093013593505050565b600080600060608486031215610c1457600080fd5b610c1d84610bb9565b9250610c2b60208501610bb9565b9150604084013590509250925092565b60008060408385031215610c4e57600080fd5b610c5783610bb9565b9150610c6560208401610bb9565b90509250929050565b600060208284031215610c8057600080fd5b610c8982610bb9565b9392505050565b600181811c90821680610ca457607f821691505b60208210811415610cc557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610cfb57610cfb610ccb565b500290565b600082610d1d57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610d3457610d34610ccb565b500390565b60008219821115610d4c57610d4c610ccb565b50019056fea164736f6c634300080a000a";

export class MockSOHM__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    initialIndex_: BigNumberish,
    rebasePct_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSOHM> {
    return super.deploy(
      initialIndex_,
      rebasePct_,
      overrides || {}
    ) as Promise<MockSOHM>;
  }
  getDeployTransaction(
    initialIndex_: BigNumberish,
    rebasePct_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialIndex_,
      rebasePct_,
      overrides || {}
    );
  }
  attach(address: string): MockSOHM {
    return super.attach(address) as MockSOHM;
  }
  connect(signer: Signer): MockSOHM__factory {
    return super.connect(signer) as MockSOHM__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSOHMInterface {
    return new utils.Interface(_abi) as MockSOHMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSOHM {
    return new Contract(address, _abi, signerOrProvider) as MockSOHM;
  }
}
