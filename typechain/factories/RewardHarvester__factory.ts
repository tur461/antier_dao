/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RewardHarvester,
  RewardHarvesterInterface,
} from "../RewardHarvester";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_onsenAllocator",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_allocators",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allocators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_useOnsen",
        type: "bool",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "onsenAllocator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_allocators",
        type: "address[]",
      },
    ],
    name: "updateAllocator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161086f38038061086f8339818101604052604081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825186602082028301116401000000008211171561008c57600080fd5b82525081516020918201928201910280838360005b838110156100b95781810151838201526020016100a1565b50505050919091016040819052600080546001600160a01b03191633178082556001600160a01b0316955093507fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba9250839150a36001600160a01b03821661012057600080fd5b6001600160601b0319606083901b1660805260005b81518110156101795760006001600160a01b031682828151811061015557fe5b60200260200101516001600160a01b0316141561017157600080fd5b600101610135565b50805161018d906002906020840190610195565b50505061020f565b8280548282559060005260206000209081019282156101ea579160200282015b828111156101ea57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906101b5565b506101f69291506101fa565b5090565b5b808211156101f657600081556001016101fb565b60805160601c61063e610231600039806103a85280610525525061063e6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063584c05141161005b578063584c0514146101665780635a96ac0a1461016e57806370a1903d146101765780638da5cb5b1461019557610088565b8063089208d81461008d57806308e17b1314610097578063241c57a21461010757806346f68ee914610140575b600080fd5b61009561019d565b005b610095600480360360208110156100ad57600080fd5b8101906020810181356401000000008111156100c857600080fd5b8201836020820111156100da57600080fd5b803590602001918460208302840111640100000000831117156100fc57600080fd5b509092509050610252565b6101246004803603602081101561011d57600080fd5b50356102c2565b604080516001600160a01b039092168252519081900360200190f35b6100956004803603602081101561015657600080fd5b50356001600160a01b03166102ec565b6101246103a6565b6100956103ca565b6100956004803603602081101561018c57600080fd5b50351515610477565b610124610588565b6000546001600160a01b031633146101fc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d908390a3600080546001600160a01b0319908116909155600180549091169055565b6000546001600160a01b031633146102b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6102bd60028383610597565b505050565b600281815481106102d257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461034b576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001546001600160a01b031633146104135760405162461bcd60e51b81526004018080602001828103825260228152602001806106106022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b60005b6002548110156104fd576002818154811061049157fe5b600091825260208220015460408051634641257d60e01b815290516001600160a01b0390921692634641257d9260048084019382900301818387803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b50506001909201915061047a9050565b50801561058557604080516370a1903d60e01b81526001600482015290516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916370a1903d91602480830192600092919082900301818387803b15801561056c57600080fd5b505af1158015610580573d6000803e3d6000fd5b505050505b50565b6000546001600160a01b031690565b8280548282559060005260206000209081019282156105ea579160200282015b828111156105ea5781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906105b7565b506105f69291506105fa565b5090565b5b808211156105f657600081556001016105fb56fe4f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6ca164736f6c6343000705000a";

export class RewardHarvester__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _onsenAllocator: string,
    _allocators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RewardHarvester> {
    return super.deploy(
      _onsenAllocator,
      _allocators,
      overrides || {}
    ) as Promise<RewardHarvester>;
  }
  getDeployTransaction(
    _onsenAllocator: string,
    _allocators: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _onsenAllocator,
      _allocators,
      overrides || {}
    );
  }
  attach(address: string): RewardHarvester {
    return super.attach(address) as RewardHarvester;
  }
  connect(signer: Signer): RewardHarvester__factory {
    return super.connect(signer) as RewardHarvester__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardHarvesterInterface {
    return new utils.Interface(_abi) as RewardHarvesterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardHarvester {
    return new Contract(address, _abi, signerOrProvider) as RewardHarvester;
  }
}
