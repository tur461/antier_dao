/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FraxSharesAllocatorVNext,
  FraxSharesAllocatorVNextInterface,
} from "../FraxSharesAllocatorVNext";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "didUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "fxs",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmountDeployed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract ITreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "veFXS",
    outputs: [
      {
        internalType: "contract IveFXS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "veFXSYieldDistributorV4",
    outputs: [
      {
        internalType: "contract IveFXSYieldDistributorV4",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063a0ee45011161005b578063a0ee45011461013f578063c4e03d4f14610147578063f2fde38b1461014f576100be565b80638da5cb5b1461011d578063987f56ff14610125576100be565b806361d027b3116100a757806361d027b314610103578063715018a61461010b5780637d42344614610115576100be565b806319ff52fd146100c3578063586c2bc7146100e7575b600080fd5b6100cb610175565b604080516001600160a01b039092168252519081900360200190f35b6100ef610184565b604080519115158252519081900360200190f35b6100cb610189565b610113610198565b005b6100cb610263565b6100cb610272565b61012d610281565b60408051918252519081900360200190f35b61012d610287565b6100cb61028d565b6101136004803603602081101561016557600080fd5b50356001600160a01b031661029c565b6067546001600160a01b031681565b600190565b6065546001600160a01b031681565b6101a06103be565b6001600160a01b03166101b1610272565b6001600160a01b03161461020c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36033805473ffffffffffffffffffffffffffffffffffffffff19169055565b6066546001600160a01b031681565b6033546001600160a01b031690565b60695481565b606a5481565b6068546001600160a01b031681565b6102a46103be565b6001600160a01b03166102b5610272565b6001600160a01b031614610310576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103555760405162461bcd60e51b81526004018080602001828103825260268152602001806103c36026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36033805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a164736f6c6343000705000a";

export class FraxSharesAllocatorVNext__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FraxSharesAllocatorVNext> {
    return super.deploy(overrides || {}) as Promise<FraxSharesAllocatorVNext>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FraxSharesAllocatorVNext {
    return super.attach(address) as FraxSharesAllocatorVNext;
  }
  connect(signer: Signer): FraxSharesAllocatorVNext__factory {
    return super.connect(signer) as FraxSharesAllocatorVNext__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FraxSharesAllocatorVNextInterface {
    return new utils.Interface(_abi) as FraxSharesAllocatorVNextInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FraxSharesAllocatorVNext {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FraxSharesAllocatorVNext;
  }
}
